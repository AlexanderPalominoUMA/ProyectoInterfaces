{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalibex\\\\Desktop\\\\WEB\\\\INTERFACES_USUARIO\\\\Test\\\\my-app\\\\src\\\\componentes\\\\SettingsMenu.js\",\n  _s = $RefreshSig$();\nimport { useSound } from \"./SoundContext\"; // Importa el hook para el contexto\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SettingsMenu({\n  onBack\n}) {\n  _s();\n  const {\n    volume,\n    setVolume,\n    effects,\n    setEffects,\n    music,\n    setMusic\n  } = useSound(); // Usa el contexto\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ajustes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Volumen General\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: volume,\n        onChange: e => setVolume(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Volumen de Efectos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: effects,\n        onChange: e => setEffects(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Volumen de M\\xFAsica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: music,\n        onChange: e => setMusic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onBack,\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/settings.svg\",\n      className: \"settings-button-img\",\n      alt: \"settingsButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsMenu, \"uEDzPVU/eYUQuCBiukUugZtyCc8=\", false, function () {\n  return [useSound];\n});\n_c = SettingsMenu;\nexport default SettingsMenu;\nvar _c;\n$RefreshReg$(_c, \"SettingsMenu\");","map":{"version":3,"names":["useSound","Button","jsxDEV","_jsxDEV","SettingsMenu","onBack","_s","volume","setVolume","effects","setEffects","music","setMusic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Dalibex/Desktop/WEB/INTERFACES_USUARIO/Test/my-app/src/componentes/SettingsMenu.js"],"sourcesContent":["import { useSound } from \"./SoundContext\"; // Importa el hook para el contexto\r\nimport Button from \"./Button\";\r\n\r\nfunction SettingsMenu({ onBack }) {\r\n  const { volume, setVolume, effects, setEffects, music, setMusic } = useSound(); // Usa el contexto\r\n\r\n  return (\r\n    <div className=\"App-header\">\r\n      <h1>Ajustes</h1>\r\n\r\n      <div className=\"settings-group\">\r\n        <label>Volumen General</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={volume}\r\n          onChange={(e) => setVolume(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"settings-group\">\r\n        <label>Volumen de Efectos</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={effects}\r\n          onChange={(e) => setEffects(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"settings-group\">\r\n        <label>Volumen de MÃºsica</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={music}\r\n          onChange={(e) => setMusic(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <Button onClick={onBack}>Volver</Button>\r\n\r\n      <img src={\"/images/settings.svg\"} className=\"settings-button-img\" alt=\"settingsButton\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsMenu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}