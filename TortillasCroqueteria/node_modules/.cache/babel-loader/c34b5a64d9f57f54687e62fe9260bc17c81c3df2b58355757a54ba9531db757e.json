{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalibex\\\\Desktop\\\\WEB\\\\INTERFACES_USUARIO\\\\Test\\\\my-app\\\\src\\\\componentes\\\\Loader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loader({\n  onComplete\n}) {\n  _s();\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const interval = 50; // Cada 50ms\n    const totalDuration = 3000; // 3 segundos\n    const step = 100 / (totalDuration / interval); // Cuánto aumenta cada vez\n\n    const timer = setInterval(() => {\n      setProgress(prev => {\n        const nextProgress = prev + step;\n        return nextProgress >= 100 ? 100 : nextProgress;\n      });\n    }, interval);\n    setTimeout(() => {\n      clearInterval(timer);\n      onComplete(); // Llamamos a onComplete cuando termine la carga\n    }, totalDuration);\n    return () => clearInterval(timer);\n  }, [onComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      style: {\n        width: \"30%\",\n        background: \"#ddd\",\n        borderRadius: \"8px\",\n        overflow: \"hidden\",\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progress}%`,\n          height: \"10px\",\n          background: \"#4caf50\",\n          transition: \"width 0.05s linear\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Loader, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Loader","onComplete","_s","progress","setProgress","interval","totalDuration","step","timer","setInterval","prev","nextProgress","setTimeout","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","background","borderRadius","overflow","marginTop","height","transition","_c","$RefreshReg$"],"sources":["C:/Users/Dalibex/Desktop/WEB/INTERFACES_USUARIO/Test/my-app/src/componentes/Loader.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction Loader({ onComplete }) {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = 50; // Cada 50ms\r\n    const totalDuration = 3000; // 3 segundos\r\n    const step = (100 / (totalDuration / interval)); // Cuánto aumenta cada vez\r\n\r\n    const timer = setInterval(() => {\r\n      setProgress((prev) => {\r\n        const nextProgress = prev + step;\r\n        return nextProgress >= 100 ? 100 : nextProgress;\r\n      });\r\n    }, interval);\r\n\r\n    setTimeout(() => {\r\n      clearInterval(timer);\r\n      onComplete(); // Llamamos a onComplete cuando termine la carga\r\n    }, totalDuration);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [onComplete]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cargando...</h2>\r\n      <div\r\n        className=\"progress-bar-container\"\r\n        style={{\r\n          width: \"30%\",\r\n          background: \"#ddd\",\r\n          borderRadius: \"8px\",\r\n          overflow: \"hidden\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"progress-bar\"\r\n          style={{\r\n            width: `${progress}%`,\r\n            height: \"10px\",\r\n            background: \"#4caf50\",\r\n            transition: \"width 0.05s linear\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,aAAa,GAAG,IAAI,CAAC,CAAC;IAC5B,MAAMC,IAAI,GAAI,GAAG,IAAID,aAAa,GAAGD,QAAQ,CAAE,CAAC,CAAC;;IAEjD,MAAMG,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BL,WAAW,CAAEM,IAAI,IAAK;QACpB,MAAMC,YAAY,GAAGD,IAAI,GAAGH,IAAI;QAChC,OAAOI,YAAY,IAAI,GAAG,GAAG,GAAG,GAAGA,YAAY;MACjD,CAAC,CAAC;IACJ,CAAC,EAAEN,QAAQ,CAAC;IAEZO,UAAU,CAAC,MAAM;MACfC,aAAa,CAACL,KAAK,CAAC;MACpBP,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,EAAEK,aAAa,CAAC;IAEjB,OAAO,MAAMO,aAAa,CAACL,KAAK,CAAC;EACnC,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MACEoB,SAAS,EAAC,wBAAwB;MAClCC,KAAK,EAAE;QACLC,KAAK,EAAE,KAAK;QACZC,UAAU,EAAE,MAAM;QAClBC,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE;MACb,CAAE;MAAAX,QAAA,eAEFf,OAAA;QACEoB,SAAS,EAAC,cAAc;QACxBC,KAAK,EAAE;UACLC,KAAK,EAAE,GAAGlB,QAAQ,GAAG;UACrBuB,MAAM,EAAE,MAAM;UACdJ,UAAU,EAAE,SAAS;UACrBK,UAAU,EAAE;QACd;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAhDQF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAkDf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}