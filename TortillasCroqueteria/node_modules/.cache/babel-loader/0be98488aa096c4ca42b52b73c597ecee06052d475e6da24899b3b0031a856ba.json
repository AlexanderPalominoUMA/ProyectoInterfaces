{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dalibex\\\\Desktop\\\\WEB\\\\INTERFACES_USUARIO\\\\Test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TaskInput from \"./componentes/TaskInput\";\nimport TaskList from \"./componentes/TaskList\";\nimport Loader from \"./componentes/Loader\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    let interval;\n    if (progress < 100) {\n      interval = setInterval(() => {\n        setProgress(oldProgress => {\n          const newProgress = oldProgress + 100 / 30; // 100% in 3 seconds\n          return newProgress >= 100 ? 100 : newProgress;\n        });\n      }, 100);\n    } else {\n      clearInterval(interval);\n      setTimeout(() => setLoading(false), 300); // Small delay to complete animation\n    }\n    return () => clearInterval(interval);\n  }, [progress, setLoading]);\n  const addTask = taskName => setTasks([...tasks, taskName]);\n  const removeTask = index => setTasks(tasks.filter((_, i) => i !== index));\n  const moveTaskUp = index => {\n    if (index === 0) return;\n    const updatedTasks = [...tasks];\n    [updatedTasks[index], updatedTasks[index - 1]] = [updatedTasks[index - 1], updatedTasks[index]];\n    setTasks(updatedTasks);\n  };\n  const moveTaskDown = index => {\n    if (index === tasks.length - 1) return;\n    const updatedTasks = [...tasks];\n    [updatedTasks[index], updatedTasks[index + 1]] = [updatedTasks[index + 1], updatedTasks[index]];\n    setTasks(updatedTasks);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        removeTask: removeTask,\n        moveTaskUp: moveTaskUp,\n        moveTaskDown: moveTaskDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"341SNPI+Cq01cHAHc5FMdIxNHec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TaskInput","TaskList","Loader","jsxDEV","_jsxDEV","App","_s","progress","setProgress","loading","setLoading","tasks","setTasks","interval","setInterval","oldProgress","newProgress","clearInterval","setTimeout","addTask","taskName","removeTask","index","filter","_","i","moveTaskUp","updatedTasks","moveTaskDown","length","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Dalibex/Desktop/WEB/INTERFACES_USUARIO/Test/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TaskInput from \"./componentes/TaskInput\";\nimport TaskList from \"./componentes/TaskList\";\nimport Loader from \"./componentes/Loader\";\nimport \"./App.css\";\n\nfunction App() {\n  const [progress, setProgress] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    let interval;\n    if (progress < 100) {\n      interval = setInterval(() => {\n        setProgress((oldProgress) => {\n          const newProgress = oldProgress + 100 / 30; // 100% in 3 seconds\n          return newProgress >= 100 ? 100 : newProgress;\n        });\n      }, 100);\n    } else {\n      clearInterval(interval);\n      setTimeout(() => setLoading(false), 300); // Small delay to complete animation\n    }\n    return () => clearInterval(interval);\n  }, [progress, setLoading]);\n\n  const addTask = (taskName) => setTasks([...tasks, taskName]);\n  const removeTask = (index) => setTasks(tasks.filter((_, i) => i !== index));\n\n  const moveTaskUp = (index) => {\n    if (index === 0) return;\n    const updatedTasks = [...tasks];\n    [updatedTasks[index], updatedTasks[index - 1]] = [updatedTasks[index - 1], updatedTasks[index]];\n    setTasks(updatedTasks);\n  };\n  const moveTaskDown = (index) => {\n    if (index === tasks.length - 1) return;\n    const updatedTasks = [...tasks];\n    [updatedTasks[index], updatedTasks[index + 1]] = [updatedTasks[index + 1], updatedTasks[index]];\n    setTasks(updatedTasks);\n  };\n\n  if (loading) {\n    return <Loader setLoading={setLoading} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Lista de Tareas</h2>\n        <TaskInput addTask={addTask} />\n        <TaskList tasks={tasks} removeTask={removeTask} moveTaskUp={moveTaskUp} moveTaskDown={moveTaskDown} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}